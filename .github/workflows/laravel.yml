name: CI

on:
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker
        run: docker compose up -d --build
        
      - name: Prepare .env file
        working-directory: ./src
        run: cp .env.example .env

      - name: Prepare vendor directory
        working-directory: ./src
        run: docker compose run --rm php sh -c "mkdir -p vendor && chmod -R 777 vendor"

      - name: Install Composer Dependencies
        working-directory: ./src
        run: docker compose run --rm composer install --no-interaction --prefer-dist --no-progress --no-scripts

      - name: Set Directory Permissions
        working-directory: ./src
        run: docker compose run --rm php chmod -R 777 storage bootstrap/cache vendor

      - name: Prepare .env file
        working-directory: ./src
        run: cp .env.example .env

      - name: Install Composer Dependencies
        working-directory: ./src
        run: docker compose run --rm composer install --no-interaction --prefer-dist --no-progress --no-scripts

      - name: Generate Application Key
        working-directory: ./src
        run: docker compose run --rm artisan key:generate

      - name: Set Directory Permissions
        working-directory: ./src
        run: docker compose run --rm php chmod -R 777 storage bootstrap/cache

      - name: Create SQLite Database File
        working-directory: ./src
        run: docker compose run --rm php sh -c "mkdir -p database && touch database/database.sqlite"

      - name: Install Node Dependencies
        working-directory: ./src
        run: docker compose run --rm npm install

      - name: Build Frontend Assets
        working-directory: ./src
        run: docker compose run --rm npm run build

      - name: Run Laravel Tests (SQLite)
        working-directory: ./src
        run: docker compose run --rm artisan test --parallel
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: /var/www/html/database/database.sqlite

      - name: Run Rector (PHPStan)
        working-directory: ./src
        run: vendor/bin/rector

      - name: Run ECS (Code Style)
        working-directory: ./src
        run: vendor/bin/ecs --fix
